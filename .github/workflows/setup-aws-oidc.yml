# # .github/workflows/setup-aws-oidc.yml
# name: Setup AWS OIDC

# on:
#   workflow_call:
#     inputs:
#       role_arn:
#         description: 'The ARN of the IAM role to assume'
#         required: true
#         type: string
#       aws_region:
#         description: 'The AWS region to use'
#         required: true
#         type: string


# jobs:
#   setup-aws:
#     runs-on: ubuntu-latest
#     permissions:
#       id-token: write
#       contents: read

#     steps:
#       - name: Assume AWS Role using OIDC
#         id: assume-role
#         run: |
#           # Get the GitHub OIDC token
#           echo "Requesting GitHub OIDC token"
#           export GITHUB_OIDC_TOKEN=$(aws sts get-caller-identity --query 'Account' --output text)
          
#           # Assume the AWS role using the OIDC token
#           echo "Assuming role: ${{ inputs.role_arn }}"
#           credentials=$(aws sts assume-role-with-web-identity \
#             --role-arn "${{ inputs.role_arn }}" \
#             --role-session-name "GitHubActions-${{ github.run_id }}" \
#             --web-identity-token "${GITHUB_OIDC_TOKEN}" \
#             --duration-seconds 3600)
          
#           # Extract credentials
#           export AWS_ACCESS_KEY_ID=$(echo $credentials | jq -r '.Credentials.AccessKeyId')
#           export AWS_SECRET_ACCESS_KEY=$(echo $credentials | jq -r '.Credentials.SecretAccessKey')
#           export AWS_SESSION_TOKEN=$(echo $credentials | jq -r '.Credentials.SessionToken')

#           # Configure AWS credentials for subsequent steps
#           echo "Configuring AWS credentials"
#           aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID"
#           aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY"
#           aws configure set aws_session_token "$AWS_SESSION_TOKEN"
#           aws configure set region "${{ inputs.aws_region }}"

#       - name: Verify AWS Identity
#         run: |
#           aws sts get-caller-identity
